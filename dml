For the given Library database 
BOOK (Book_ISBN [PK], Title[Not Null], Publisher_ Name, price[Check Price>0], Date_Of_Publication,Book_Copy ), 
BOOK_AUTHORS (Book_ISBN [PK,FK]Author_Name [PK], Author_City) 
Solve the following Assignments - 
Aim: Design at least 10 SQL DML queries for suitable database applications using SQL DML statements: Insert, Select, Update, Delete with operators, functions and set operators.
i)	Insert at least five records in each table.
ii)	Select details of Books whose Author lives in “Pune”.
iii)	Select Book Names from table Book whose copies are in between 10 to 15.
iv)	Update Book Copies as “10” whose Book Publisher is  “Tata MacGraw Hill”.
v)	Select the Name of Publisher who supplied maximum books.


select book.* from book join author on book.isbn = author.isbn where author.author_city = "Pune";
+------+---------------+----------+-------+-------------+-----------+
| isbn | title         | pub_name | price | date_of_pub | book_copy |
+------+---------------+----------+-------+-------------+-----------+
|  103 | Natsamrat     | CUMMINS  |   100 | 2022-04-05  |        10 |
|  104 | Kashmir Files | JSCOE    |   500 | 2022-10-12  |      1000 |
|  105 | Asur          | RSCOE    |   150 | 2022-09-09  |        75 |
+------+---------------+----------+-------+-------------+-----------+
mysql> select book.title from book where book_copy > 10 and book_copy<15;
+---------------+
| title         |
+---------------+
| Wings of Fire |
| Natsamrat     |
| Asur          |
+---------------+
3 rows in set (0.00 sec)
mysql> SELECT pub_name from book GROUP BY pub_name HAVING COUNT(*) = (SELECT MAX(BooksCount) FROM (SELECT pub_name, COUNT(*) AS BooksCount from book group by pub_name) as PublisherCounts);
+----------+
| pub_name |
+----------+
| RSCOE    |
+----------+


//question
For the given Library database 
BOOK (Book_ISBN [PK], Title[Not Null], Publisher_ Name, price[Check Price>0], Date_Of_Publication,Book_Copy ), 
BOOK_AUTHORS (Book_ISBN [PK,FK]Author_Name [PK], Author_City) 
Solve the following Assignments - 
Aim: Design at least 10 SQL DML queries for suitable database applications using SQL DML statements: Insert, Select, Update, Delete with operators, functions and set operators
i)	Display name of publishers as per no of books published by them in ascending order.
ii)	Get publisher names who published at least one book written by author name like ‘K%’.
iii)	Get book name and Authors names where book written by maximum authors.
iv)	Get publisher names accordingly books published alphabetically
v)	Find the no of books published in 01 Jan 2014 to till date.
Delete the book from Book table written by Author ‘Korth’

mysql> select pub_name, count(*) as totalBooks from book group by pub_name order by totalBooks asc;
+----------+------------+
| pub_name | totalBooks |
+----------+------------+
| PCCOE    |          1 |
| CUMMINS  |          1 |
| JSCOE    |          1 |
| RSCOE    |          2 |
+----------+------------+
4 rows in set (0.01 sec)
select pub_name from book join author on book.isbn = author.isbn where author.author_name LIKE 'K%';
+----------+
| pub_name |
+----------+
| RSCOE    |
| RSCOE    |
+----------+

mysql> select pub_name from book order by pub_name asc;
+-----------+
| pub_name  |
+-----------+
| CUMMINS   |
| JSCOE     |
| KJSomaiya |
| PCCOE     |
| RSCOE     |
| RSCOE     |
+-----------+
mysql> select * from book;
+------+------------------+-----------+-------+-------------+-----------+
| isbn | title            | pub_name  | price | date_of_pub | book_copy |
+------+------------------+-----------+-------+-------------+-----------+
|  101 | Wings of Fire    | RSCOE     |   250 | 2023-10-17  |        11 |
|  102 | The white tiger  | PCCOE     |   300 | 2023-05-10  |       200 |
|  103 | Natsamrat        | CUMMINS   |   100 | 2012-09-09  |        12 |
|  104 | Kashmir Files    | JSCOE     |   500 | 2022-10-12  |      1000 |
|  105 | Asur             | RSCOE     |   150 | 2009-02-05  |        14 |
|  106 | Jai Shri Krishna | KJSomaiya |   100 | 2020-06-09  |        10 |
+------+------------------+-----------+-------+-------------+-----------+
6 rows in set (0.00 sec)

mysql> select * from author;
+------+-------------+-------------+
| isbn | author_name | author_city |
+------+-------------+-------------+
|  101 | Kalam ji    | Chennai     |
|  102 | Shyam       | Mumbai      |
|  103 | Radha       | Pune        |
|  104 | Akash       | Pune        |
|  105 | Karan       | Pune        |
|  106 | Rohan       | Jalgaon     |
+------+-------------+-------------+
6 rows in set (0.00 sec)

mysql> select count(*) as totalbooks from book where date_of_pub >= '2014-01-01' and date_of_pub <= CURDATE();
+------------+
| totalbooks |
+------------+
|          3 |
+------------+
1 row in set (0.00 sec)
mysql> delete from book where isbn in (select isbn from author where author_name = 'Rohan');
Query OK, 1 row affected (0.00 sec)

mysql> select * from book;
+------+-----------------+----------+-------+-------------+-----------+
| isbn | title           | pub_name | price | date_of_pub | book_copy |
+------+-----------------+----------+-------+-------------+-----------+
|  101 | Wings of Fire   | RSCOE    |   250 | 2023-10-17  |        11 |
|  102 | The white tiger | PCCOE    |   300 | 2023-05-10  |       200 |
|  103 | Natsamrat       | CUMMINS  |   100 | 2012-09-09  |        12 |
|  104 | Kashmir Files   | JSCOE    |   500 | 2022-10-12  |      1000 |
|  105 | Asur            | RSCOE    |   150 | 2009-02-05  |        14 |
+------+-----------------+----------+-------+-------------+-----------+

//joins
Aim: Design at 10 SQL queries for suitable database applications using SQL DML statements: all types of join, sub-query and view.
For the given Library database 
BOOK (Book_ISBN [PK], Title[Not Null], Publisher_ Name, price[Check Price>0], Date_Of_Publication,Book_Copy ), 
BOOK_AUTHORS (Book_ISBN [PK]Author_Name [PK], Author_City)
a)	Select Book_ISBN, Title, Author_Name from relations Book and Book_Authors INNER JOIN on attribute Book_ISBN.
b)	Select Book_ISBN, Title, Publisher, Author_Name from relations Book and Book_Authors LEFT OUTER JOIN on attribute Book_ISBN.
c)	Select Book_ISBN, Title, Publisher, Author_Name from relations Book and Book_Authors RIGHT OUTER JOIN on attribute Book_ISBN.
d)Select Book_ISBN, Title from relation Book whose author is living in City =’Pune’


mysql> select book.isbn, book.title, author.author_name from book inner join author on book.isbn = author.isbn;
+------+-----------------+-------------+
| isbn | title           | author_name |
+------+-----------------+-------------+
|  101 | Wings of Fire   | Kalam ji    |
|  102 | The white tiger | Shyam       |
|  103 | Natsamrat       | Radha       |
|  104 | Kashmir Files   | Akash       |
|  105 | Asur            | Karan       |
+------+-----------------+-------------+
5 rows in set (0.00 sec)

mysql> select book.isbn, book.title, book.pub_name, author.author_name from book left outer join author on book.isbn = author.isbn;
+------+-----------------+----------+-------------+
| isbn | title           | pub_name | author_name |
+------+-----------------+----------+-------------+
|  101 | Wings of Fire   | RSCOE    | Kalam ji    |
|  102 | The white tiger | PCCOE    | Shyam       |
|  103 | Natsamrat       | CUMMINS  | Radha       |
|  104 | Kashmir Files   | JSCOE    | Akash       |
|  105 | Asur            | RSCOE    | Karan       |
+------+-----------------+----------+-------------+
5 rows in set (0.00 sec)

mysql> select book.isbn, book.title, book.pub_name, author.author_name from book right outer join author on book.isbn = author.isbn;
+------+-----------------+----------+-------------+
| isbn | title           | pub_name | author_name |
+------+-----------------+----------+-------------+
|  101 | Wings of Fire   | RSCOE    | Kalam ji    |
|  102 | The white tiger | PCCOE    | Shyam       |
|  103 | Natsamrat       | CUMMINS  | Radha       |
|  104 | Kashmir Files   | JSCOE    | Akash       |
|  105 | Asur            | RSCOE    | Karan       |
| NULL | NULL            | NULL     | Rohan       |
+------+-----------------+----------+-------------+
6 rows in set (0.00 sec)
select isbn,title from book where isbn in(select isbn from author where author_city = "Pune");
+------+---------------+
| isbn | title         |
+------+---------------+
|  103 | Natsamrat     |
|  104 | Kashmir Files |
|  105 | Asur          |
+------+---------------+
3 rows in set (0.00 sec)

Q.Consider Dept table
DEPTNO 	DNAME	LOC

Perform the following: 
1. Rename the table dept as department
 2. Add a new column PINCODE with not null constraints to the existing table DEPT 
3. All constraints and views that reference the column are dropped automatically, along with the column. 
4. Rename the column DNAME to DEPT_NAME in dept table
 5. Change the data type of column loc as CHAR with size 10 
6. Delete table

mysql> create table dept(deptno int(10),dname varchar(10), loc varchar(10));
Query OK, 0 rows affected, 1 warning (0.13 sec)

1)mysql> alter table dept rename to department;
Query OK, 0 rows affected (0.04 sec)

mysql> describe department;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| deptno | int         | YES  |     | NULL    |       |
| dname  | varchar(10) | YES  |     | NULL    |       |
| loc    | varchar(10) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+

2)mysql> ALTER TABLE department ADD PINCODE INT NOT NULL;
Query OK, 0 rows affected (0.06 sec)


3)
mysql> CREATE VIEW department_view AS
    -> SELECT DEPTNO, DNAME, LOC,PINCODE FROM department;
 mysql> DROP VIEW department_view;
 Query OK, 0 rows affected (0.02 sec)

4)mysql> ALTER TABLE department RENAME COLUMN DNAME TO DEPT_NAME;
Query OK, 0 rows affected (0.03 sec)

5)mysql> ALTER TABLE department modify LOC varchar(10);
Query OK, 0 rows affected (0.03 sec)

6)mysql> DROP TABLE department;
Query OK, 0 rows affected (0.02 sec)

Q.Consider Employee table
 
Perform the following
 1. Display all the fields of employee table 
2. Retrieve employee number and their salary 
3. Retrieve average salary of all employee 
4. Retrieve number of employee
 5. Retrieve distinct number of employee
 6. Retrieve total salary of employee group by employee name and count similar names
 7. Retrieve total salary of employee which is greater than >120000 
8. Display name of employee in descending order 
9. Display details of employee whose name is AMIT and salary greater than 50000;

mysql> create table employee(empno varchar(10),emp_name varchar(20),dept varchar(10),salary int,doj date,branch varchar(20));

mysql> insert into employee("E101","Amit","Production",45000,"12-Mar-00","Bangalore");
mysql> insert into employee values("E101","Amit","Production",45000,"00-03-12","Bangalore");
mysql> insert into employee values("E102","Amit","HR",70000,"02-07-03","Bang
alore");

mysql> insert into employee values("E103","sunita","Manager",120000,"01-01-11","mysore");
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values("E105","sunita","IT",67000,"01-08-11","my
sore");
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values("E106","mahesh","civil",145000,"03-09-20"
,"mumbai");
Query OK, 1 row affected (0.01 sec)

mysql> select * from employee;
+-------+----------+------------+--------+------------+-----------+
| empno | emp_name | dept       | salary | doj        | branch    |
+-------+----------+------------+--------+------------+-----------+
| E101  | Amit     | Production |  45000 | 2000-03-12 | Bangalore |
| E102  | Amit     | HR         |  70000 | 2002-07-03 | Bangalore |
| E103  | sunita   | Manager    | 120000 | 2001-01-11 | mysore    |
| E105  | sunita   | IT         |  67000 | 2001-08-11 | mysore    |
| E106  | mahesh   | civil      | 145000 | 2003-09-20 | mumbai    |
+-------+----------+------------+--------+------------+-----------+
5 rows in set (0.00 sec)

mysql> select count(*) from emp_name;
ERROR 1146 (42S02): Table 'practical.emp_name' doesn't exist
mysql> select count(*) from employee;
+----------+
| count(*) |
+----------+
|        5 |
+----------+
1 row in set (0.03 sec)

mysql> select avg(salary) from employee;
+-------------+
| avg(salary) |
+-------------+
|  89400.0000 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT COUNT(*) AS total_employees FROM Employee;
+-----------------+
| total_employees |
+-----------------+
|               5 |
+-----------------+
1 row in set (0.01 sec)

mysql> SELECT COUNT(DISTINCT emp_number) AS distinct_employees FROM Employee;
ERROR 1054 (42S22): Unknown column 'emp_number' in 'field list'
mysql> SELECT COUNT(DISTINCT emp_name) AS distinct_employees FROM Employee;
+--------------------+
| distinct_employees |
+--------------------+
|                  3 |
+--------------------+
1 row in set (0.01 sec)

mysql> SELECT emp_name, SUM(salary) AS total_salary, COUNT(emp_name) AS name_count
    -> FROM Employee
    -> GROUP BY emp_name;
+----------+--------------+------------+
| emp_name | total_salary | name_count |
+----------+--------------+------------+
| Amit     |       115000 |          2 |
| sunita   |       187000 |          2 |
| mahesh   |       145000 |          1 |
+----------+--------------+------------+
3 rows in set (0.00 sec)

mysql> SELECT SUM(salary) AS total_salary
    -> FROM Employee
    -> WHERE salary > 120000;
+--------------+
| total_salary |
+--------------+
|       145000 |
+--------------+
1 row in set (0.00 sec)

mysql> SELECT emp_name FROM Employee
    -> ORDER BY emp_name DESC;
+----------+
| emp_name |
+----------+
| sunita   |
| sunita   |
| mahesh   |
| Amit     |
| Amit     |
+----------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM Employee
    -> WHERE emp_name = 'AMIT' AND salary > 50000;
+-------+----------+------+--------+------------+-----------+
| empno | emp_name | dept | salary | doj        | branch    |
+-------+----------+------+--------+------------+-----------+
| E102  | Amit     | HR   |  70000 | 2002-07-03 | Bangalore |
+-------+----------+------+--------+------------+-----------+
1 row in set (0.00 sec)
